<?php

/**
 * Implements hook_install().
 */
function drupalgap_mobile_notifications_install(){
	node_types_rebuild();
	drupalgap_mobile_notifications_add_custom_fields();
}

/**
 * Implements hook_uninstall().
 */
function drupalgap_mobile_notifications_uninstall() {
    $ournewtype = 'drupalgap_mobile_notifications';
    $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
    $result = db_query($sql, array(':type' => $ournewtype));
    $nodeids = array();
    foreach ($result as $row) {
        $nodeids[] = $row->nid;
    }
    node_delete_multiple($nodeids);
    drupalgap_mobile_notifications_delete_custom_fields();
    node_type_delete($ournewtype);
    field_purge_batch(500);
}

function drupalgap_mobile_notifications_delete_custom_fields() {
    foreach (array_keys(_drupalgap_mobile_notifications_installed_fields()) as $field) {
        field_delete_field($field);
    }
    $instances = field_info_instances('node', 'drupalgap_mobile_notifications');
    foreach ($instances as $instance_name => $fieldinstance) {
        field_delete_instance($fieldinstance);
    }
}

/**
 * Add fields
 */
function drupalgap_mobile_notifications_add_custom_fields() {
    foreach (_drupalgap_mobile_notifications_installed_fields() as $field) {
        field_create_field($field);
    }
    foreach (_drupalgap_mobile_notifications_installed_instances() as $fieldinstance) {
        $fieldinstance['entity_type'] = 'node';
        $fieldinstance['bundle'] = 'drupalgap_mobile_notifications';
        field_create_instance($fieldinstance);
    }
}

/**
 * Define fields
 */
function _drupalgap_mobile_notifications_installed_fields() {
  $t = get_t();
  return array(
        'mobile_message' => array(
            'field_name' => 'mobile_message',
            'label' => $t('Message'),
            'type' => 'text_long'
        ),
        'mobile_attachment' => array(
            'field_name' => 'mobile_attachment',
            'label' => $t('Attachment'),
            'type' => 'entityreference',
            'settings' => array(
							'target_type' => 'node'
            ),
        ),
        'mobile_roles' => array(
            'field_name' => 'mobile_roles',
            'label' => $t('Roles'),
            'type' => 'list_text',
            'cardinality' => -1,
            'settings' => array(
							'allowed_values' => array(
								'all' => 'all',
								'anonymous user' => 'anonymous user',
								'authenticated user' => 'authenticated user',
								'administrator' => 'administrator',
							),
						),
				)
  );
}

/**
 * Define instances
 */
function _drupalgap_mobile_notifications_installed_instances(){
	$t = get_t();
	return array(
			'mobile_message' => array(
					'field_name' => 'mobile_message',
					'label' => $t('Message'),
					'required' => TRUE,
					'widget' => array(
							'weight' => 1,
							'type' => 'text_textarea',
							'settings' => array( 'rows' => 3 ),
					),
					'display' => array(
							'default' => array(
									'label' => 'hidden',
									'type' => 'text_default',
									'weight' => 0,
							),
							'drupalgap' => array(
									'label' => $t('Message'),
									'type' => 'text',
									'weight' => 0,
							),
					)
			),
			'mobile_attachment' => array(
					'field_name' => 'mobile_attachment',
					'label' => $t('Attachment'),
					'widget' => array(
							'weight' => 2,
							'type' => 'entityreference_autocomplete'
					),
					'display' => array(
							'default' => array(
									'label' => 'hidden',
									'type' => 'entityreference_label',
									'weight' => 1,
							),
							'drupalgap' => array(
									'label' => 'hidden',
									'type' => 'entityreference_label',
									'weight' => 1,
							),
					)
			),
			'mobile_roles' => array(
					'field_name' => 'mobile_roles',
					'label' => $t('Roles'),
					'required' => TRUE,
					'widget' => array(
							'weight' => 3,
							'type' => 'options_buttons'
					),
					'display' => array(
							'default' => array(
									'label' => 'hidden',
									'type' => 'list_default',
									'weight' => 2,
							),
							'drupalgap' => array(
									'label' => 'hidden',
									'type' => 'list_default',
									'weight' => 2,
							),
					)
			),
	);
}












